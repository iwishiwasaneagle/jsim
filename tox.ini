# Tox configuration file
# Read more under https://tox.readthedocs.io/

[tox]
minversion = 3.15
envlist = default-py39,types-py39,doctests-py39,linkcheck-py39
isolated_build = True


[testenv]
description =
    default: Invoke pytest to run automated tests
    types: Run mypy against codebase
    profile: Profile the python code
    profviz: Visualize profiled code
    jupyter: Launch a jupyter notebook
setenv =
    types: MODULE = src/jsim
passenv =
    HOME
extras =
    testing
commands =
    default: pytest {posargs} --cov-report=xml --cov-branch
    types: python -m mypy --config-file setup.cfg "{env:MODULE}"
    jupyter: python -m jupyter notebook
    profile: python -m cProfile -o .tox/profile.prof {posargs}
    profviz: python -m snakeviz .tox/profile.prof -s
deps =
    {profile,jupyter,default,types}: -r {toxinidir}/requirements.txt
    {profile,jupyter,default,types}: -r {toxinidir}/requirements.dev.txt
    {profile,jupyter,default,types}: -r {toxinidir}/tests/requirements.txt
    types: mypy
    jupyter: jupyter
    profviz: snakeviz

[testenv:{build,clean}]
description =
    build: Build the package in isolation according to PEP517, see https://github.com/pypa/build
    clean: Remove old distribution files and temporary build artifacts (./build and ./dist)
# NOTE: build is still experimental, please refer to the links for updates/issues
# https://setuptools.readthedocs.io/en/stable/build_meta.html#how-to-use-it
# https://github.com/pypa/pep517/issues/91
skip_install = True
changedir = {toxinidir}
deps =
    build: build[virtualenv]
commands =
    clean: python -c 'from shutil import rmtree; rmtree("build", True); rmtree("dist", True)'
    build: python -m build .
# By default `build` produces wheels, you can also explicitly use the flags `--sdist` and `--wheel`

[testenv:{docs,doctests,linkcheck}]
description =
    docs: Invoke sphinx-build to build the docs
    doctests: Invoke sphinx-build to run doctests
    linkcheck: Check for broken links in the documentation
setenv =
    DOCSDIR = {toxinidir}/docs
    BUILDDIR = {toxinidir}/docs/_build
    docs: BUILD = html
    doctests: BUILD = doctest
    linkcheck: BUILD = linkcheck
deps =
    -r {toxinidir}/docs/requirements.txt
    # ^  requirements.txt shared with Read The Docs
    {docs,doctests}: -r {toxinidir}/requirements.txt
commands =
    sphinx-build --color -b {env:BUILD} -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/{env:BUILD}" {posargs}

[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
    By default, it uses testpypi. If you really want to publish your package
    to be publicly accessible in PyPI, use the `-- --repository pypi` option.
skip_install = True
changedir = {toxinidir}
passenv =
    HOME
deps = twine
commands =
    python -m twine check dist/*
    python -m twine upload {posargs:--repository testpypi} --config-file "{env:HOME}/.pypirc" dist/*

[testenv:{profile, profviz}]
description =
deps =
    {profviz}: snakeviz
