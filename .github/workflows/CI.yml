name: CI

on:
    push:
        branches: [master, dev]
    pull_request:

jobs:
  run-tests:
    runs-on: ${{matrix.platform}}
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v2
      id: cache-venv-tests
      with:
        path: ./venv/
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-tests

    - run: python -m venv ./venv && . ./venv/bin/activate && 
           pip install -r requirements.txt
      if: steps.cache-venv-tests.outputs.cache-hit != 'true'

    - name: Test with tox
      run: . ./venv/bin/activate && tox
 
  run-examples:
    runs-on: ubuntu-latest
    name: run examples
    
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - uses: actions/cache@v2
        id: cache-venv-examples
        with:
          path: ./venv/
          key: ${{ runner.os }}-venv-${{ hashFiles('**/setup*') }}
          restore-keys: |
            ${{ runner.os }}-venv-examples

      - run: python -m venv ./venv && . ./venv/bin/activate && 
             python setup.py install
        if: steps.cache-venv-examples.outputs.cache-hit != 'true'

      - name: Run all examples
        run: | 
          list=$(find examples -type f -name "*.py")
          for i in $list
          do
              . ./venv/bin/activate && CI=1 python $i
          done
      
